# Напишите программу, удаляющую из текста все слова, содержащие ""абв"".

text = 'лоывапАБВолдпрпр ылрывр абв орлопрЫпр фывоорабв'

text = list(filter(lambda  el: 'абв'  notin  el.lower(), text.split()))
print(' '.join(text))


# Создайте программу для игры с конфетами человек против человека.

# Условие задачи: На столе лежит 2021 конфета. Играют два игрока 
# делая ход друг после друга. Первый ход определяется жеребьёвкой. 
# За один ход можно забрать не более чем 28 конфет. 
# Все конфеты оппонента достаются сделавшему последний ход. 
# Сколько конфет нужно взять первому игроку, чтобы забрать все конфеты у своего 
# конкурента?


# человек против человека


from random import randint

value = int(input('Введите колличество конфет на столе: '))
print('Начало игры')
print(f'На столе лежит {value} конфет(а)')

def input_dat(name):
    x = int(input(f"Сколько конфет возьмет игрок {name} (от 1 до 28): "))
    while x < 1 or x > 28:
        x = int(input(f"Неверно введено количество конфет "))
    return x

def p_print(name, k, counter, value):
    print(f"Игрок {name} взял {k}, теперь у него {counter}, на столе осталось {value} конфет.")

player1 = input("Введите имя первого игрока: ")
player2 = input("Введите имя второго игрока: ")
flag = randint(0,2)
if flag:
    print(f"Первый ходит {player1}")
else:
    print(f"Первый ходит {player2}")

counter1 = 0 
counter2 = 0

while value != 0:
    if flag:
        k = input_dat(player1)
        counter1 += k
        value -= k
        flag = False
        p_print(player1, k, counter1, value)
    else:
        k = input_dat(player2)
        counter2 += k
        value -= k
        flag = True
        p_print(player2, k, counter2, value)

if flag:
    print(f"Выиграл {player1}")
else:
    print(f"Выиграл {player2}")



# игра против бота

from random import randint, randrange

total_sweets = int(input('Введите колличество конфет на столе: '))
print('Начало игры')
print(f'На столе лежит {total_sweets} конфет(а)')

def whos_first ():
    a = randint(0,2)
    if a == 0:
        return False
    else:
        return True


int_bot = 0
player_turn = whos_first()

while total_sweets != 0:
    if total_sweets >= 28:
        if player_turn == True:
            print('Сколько конфет возьмет первый игрок (от 1 до 28)')
            player = int(input())
            while player < 1 or player > 28:
                print ('Неверно введено количество конфет')
                player = int(input())
            total_sweets -= player
            print(f'Игрок взял {player} конфет, осталось {total_sweets} конфет')
            player_turn = False
            
        else:   
            int_bot = randrange(1, 29)
            total_sweets-=int_bot
            print(f'Компьютер взял {int_bot} конфет, осталось {total_sweets} конфет')
            player_turn = True
    else:
        if player_turn == True:
            print(f'Сколько конфет возьмет первый игрок (от 1 до {total_sweets})')
            player = int(input())
            while player < 1 or player > total_sweets:
                print ('Неверно введено количество конфет')
                player = int(input())
            total_sweets -= player
            player_turn = False
            print(f'Игрок взял {player} конфет, осталось {total_sweets} конфет')
        else:   
            int_bot = randrange(1, total_sweets+1)
            total_sweets-=int_bot
            player_turn = True
            print(f'Компьютер взял {int_bot} конфет, осталось {total_sweets} конфет')
           

if player_turn == True:
    print(f'Победил компьютер!')
    print(f'Осталось {total_sweets} конфет')
else:
    print(f'Победил первый игрок!')
    print(f'Осталось {total_sweets} конфет')
    
    
    # Создайте программу для игры в ""Крестики-нолики"".

import random
import os

def print_array(field):   #игровое поле крестиков-ноликов
    os.system('cls')
    for i in range(1, 10):
        print(f"{field[i - 1]} ", end="")
        if not i%3: print()

def filling(array, array_ex, set): 
    x = int(input("Выберете клетку: "))
    if x in array_ex:
        for i in range(len(array)):
            if array[i] == x:
                if set: array[i] = "X"
                else: array[i] = "O"
        array_ex.remove(x)
    else:
        print("Поле занято, или вы вышли за границы игрового поля")
        filling(array, array_ex, set)
        

def win_set(array): 
    if (array[0] == array[1] == array[2] or
     array[3] == array[4] == array[5] or
     array[6] == array[7] == array[8] or
     array[0] == array[3] == array[6] or
     array[1] == array[4] == array[7] or
     array[2] == array[5] == array[8] or
     array[0] == array[4] == array[8] or
     array[2] == array[4] == array[6]) :
        return True
    else:
        return False
        

def play(array, array_ex, set):  
    print_array(array)
    if array_ex == []:
        print("Победила Дружба!")
        return
    
    if set:
        player = "1-й"
    else: 
        player = '2-й'
    print(f"Ходит {player} игрок")
    
    filling(array, array_ex, set)
    
    if win_set(array):
        print_array(array)
        print(f"Выиграл {player} игрок \n GAME OVER")
        return
    play(array, array_ex, not set)

field = [int(i) for i in range(1, 10)]      
field_ex = [int(i) for i in range(1, 10)] 

set = random.randint(0,1)
play(field, field_ex, set)


# Реализуйте RLE алгоритм: реализуйте модуль сжатия и восстановления данных.

str_for_com = input('Введите текст для сжатия: ')


def compr(s):
    encoding = ""
    i = 0
    while i < len(s):
        count = 1
        while i + 1 < len(s) and s[i] == s[i + 1]:
            count = count + 1
            i = i + 1
        encoding += str(count) + s[i]
        i = i + 1
    return encoding


print(compr(str_for_com))

def rec(t):
    sym = ''
    res = ''
    for i in range(len(t)):
        if t[i].isdigit():
            sym += t[i]
        else:
            res = res + t[i] * int(sym)
            sym = ''
    return res

print(rec(compr(str_for_com)))  
